import { AxiosResponse } from "axios";
import { api } from "../api";
import {
  SchemaUpdateContrasena,
  SchemaUpdateUser,
} from "../types/TypeRegisterUser";

// Generated by https://quicktype.io

export interface ResponseListaUsuarios {
  ok: boolean;
  message: string;
  data: DatumListaUsuarios[];
}

export interface DatumListaUsuarios {
  id: string;
  nombre: string;
  correoElectronico: string;
  contrasena: string;
  ultimaConexion: string;
  imagenPerfil: null | string;
  estado: string;
  id_role: null | string;
  createdAt: string;
  updatedAt: string;
  roles: Roles | null;
}

export interface Roles {
  id: string;
  nombre: string;
  descripcion: string;
}

export const listaUsuarios = async (): Promise<
  DatumListaUsuarios[] | undefined
> => {
  try {
    const { data }: AxiosResponse = await api.get(
      "/control-usuarios/users/show-all"
    );

    if (!data) throw new Error("Error");
    return data.data;
  } catch (error) {
    console.log(error);
  }
};

interface RequestGetUser {
  id: string;
}

export interface ResponseGetUser {
  ok: boolean;
  message: string;
  data: DataGetUser;
}

export interface DataGetUser {
  id: string;
  nombre: string;
  correoElectronico: string;
  contrasena: string;
  ultimaConexion: string;
  imagenPerfil: null;
  estado: string;
  id_role: string;
  createdAt: string;
  updatedAt: string;
}

export const getUsuario = async (
  dataBody: RequestGetUser
): Promise<DataGetUser | undefined> => {
  try {
    const { data }: AxiosResponse = await api.get(
      `/control-usuarios/users/show-one/${dataBody.id}`
    );

    if (!data) throw new Error("Error");
    return data.data;
  } catch (error) {
    console.log(error);
  }
};

interface RequestActivate {
  id: string;
  estado: "Activo" | "Inactivo";
}
export const activarODesactivarUser = async (dataBody: RequestActivate) => {
  try {
    const { data }: AxiosResponse = await api.post(
      "/control-usuarios/users/active-inactive",
      {
        id: dataBody.id,
        estado: dataBody.estado,
      }
    );

    if (!data) throw new Error("Error");
    if (!data.ok) throw new Error(data.message);

    return data;
  } catch (error) {
    console.log(error);
  }
};

interface RequestUpdateRol {
  id_usuario: string;
  id_rol: {
    id: string;
    label: string;
    value: string;
  };
}
export const updateRolUser = async (dataBody: RequestUpdateRol) => {
  try {
    const sendData = {
      id_usuario: dataBody.id_usuario,
      id_rol: dataBody.id_rol.value,
    };

    const { data }: AxiosResponse = await api.put(
      "/control-usuarios/users/update-rol",
      sendData
    );

    if (!data) throw new Error("Error");
    if (!data.ok) throw new Error(data.message);

    return data;
  } catch (error) {
    console.log(error);
  }
};

export const updateEmailOrUser = async (dataBody: SchemaUpdateUser) => {
  try {
    const { data }: AxiosResponse = await api.put(
      "/control-usuarios/users/update",
      dataBody
    );

    if (!data) throw new Error("Error");
    return data.data;
  } catch (error) {
    console.log(error);
  }
};

export const updateContrasena = async (dataBody: SchemaUpdateContrasena) => {
  try {
    const { data }: AxiosResponse = await api.put(
      "/control-usuarios/users/contrasena",
      dataBody
    );

    if (!data) throw new Error("Error");

    if (data.estado === 401) throw new Error("Credenciales no validas");

    console.log("DATA >> ", data);

    return data.data;
  } catch (error) {
    console.log(error);
  }
};
